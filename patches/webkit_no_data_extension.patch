Index: third_party/WebKit/Source/bindings/v8/V8AbstractEventListener.cpp
===================================================================
--- third_party/WebKit/Source/bindings/v8/V8AbstractEventListener.cpp	(revision 161986)
+++ third_party/WebKit/Source/bindings/v8/V8AbstractEventListener.cpp	(working copy)
@@ -112,9 +112,11 @@
     v8::Handle<v8::String> eventSymbol = V8HiddenPropertyName::event(v8Context->GetIsolate());
     v8::Local<v8::Value> returnValue;
 
+#if 0
     // In beforeunload/unload handlers, we want to avoid sleeps which do tight loops of calling Date.getTime().
     if (event->type() == eventNames().beforeunloadEvent || event->type() == eventNames().unloadEvent)
         DateExtension::get()->setAllowSleep(false, v8Context->GetIsolate());
+#endif
 
     {
         // Catch exceptions thrown in the event handler so they do not propagate to javascript code that caused the event to fire.
@@ -148,8 +150,10 @@
         tryCatch.Reset();
     }
 
+#if 0
     if (event->type() == eventNames().beforeunloadEvent || event->type() == eventNames().unloadEvent)
         DateExtension::get()->setAllowSleep(true, v8Context->GetIsolate());
+#endif
 
     ASSERT(!handleOutOfMemory() || returnValue.IsEmpty());
 
